Index: src/core/ShieldUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nclass ShieldUser extends Character {\n\n    /**\n     * Constructs a ShieldUser object with the specified attributes.\n     *\n     * @param name    The unique name of the ShieldUser character.\n     * @param hp      The initial hp of the ShieldUser character.\n     * @param atk     The initial atk of the ShieldUser character.\n     * @param def     The initial def of the ShieldUser character.\n     */\n    public ShieldUser(String name, int hp, int atk, int def) {\n\n        super(name, hp, atk, def, CharacterType.SHIELDUSER); // Call character constructor\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/ShieldUser.java b/src/core/ShieldUser.java
--- a/src/core/ShieldUser.java	
+++ b/src/core/ShieldUser.java	
@@ -6,6 +6,8 @@
 
 package core;
 
+
+
 class ShieldUser extends Character {
 
     /**
@@ -22,3 +24,4 @@
 
     }
 }
+
Index: src/core/CharacterType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\npublic enum CharacterType {\n    // enumeration of different character classes\n    HEALER,\n    MARKSMAN,\n    SWORDSMAN,\n    SHIELDUSER\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/CharacterType.java b/src/core/CharacterType.java
--- a/src/core/CharacterType.java	
+++ b/src/core/CharacterType.java	
@@ -1,15 +1,15 @@
-/**
- *  Arfa Raja, Nethanya Dhaipule, Syed Omar
+/**  Arfa Raja, Nethanya Dhaipule, Syed Omar
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 public enum CharacterType {
     // enumeration of different character classes
     HEALER,
     MARKSMAN,
     SWORDSMAN,
     SHIELDUSER
-}
\ No newline at end of file
+}
+
Index: src/core/FileLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\n\npublic class FileLoader {\n\n    /**\n     * Reads a file with characters and teams\n     *\n     */\n    public static void load(File file, List<Character> characterList, Map<String, List<Character>> teams) {\n        try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n            String line;\n            while ((line = br.readLine()) != null) {\n                if (line.equals(\"Characters\")) { // reads characters\n                    loadCharacters(br, characterList);\n                } else if (line.equals(\"Teams\")) { // reads teams\n                    loadTeams(br, teams, characterList);\n                }\n            }\n            System.out.println(\"Data loaded successfully from \" + file.getName()); // success message\n        } catch (IOException e) {\n            System.out.println(\"An error occurred while loading data from file: \" + e.getMessage()); // error message\n        }\n    }\n\n    /**\n     * Loads the characters from the file\n     *\n     */\n    private static void loadCharacters(BufferedReader br, List<Character> characterList) throws IOException {\n        String line;\n        while ((line = br.readLine()) != null && !line.equals(\"\")) {\n            String[] parts = line.split(\",\");\n            String name = parts[0]; // reads the name\n            CharacterType type = CharacterType.valueOf(parts[1]); // reads the type\n            int hp = Integer.parseInt(parts[2]); // reads the hp\n            int atk = Integer.parseInt(parts[3]); // reads the atk\n            int def = Integer.parseInt(parts[4]); // reads the def\n            Character character = Character.createFileCharacter(name, hp, atk, def, type); // creates character\n            characterList.add(character); // adds character to characterList\n        }\n    }\n\n    /**\n     * Loads the teams from the file\n     *\n     */\n    private static void loadTeams(BufferedReader br, Map<String, List<Character>> teams, List<Character> characterList) throws IOException {\n        String line;\n        while ((line = br.readLine()) != null && !line.equals(\"\")) {\n            String[] parts = line.split(\",\");\n            String teamName = parts[0]; // reads the team name\n            String[] memberNames = parts[1].split(\";\"); // reads the member names\n            List<Character> teamMembers = new ArrayList<>();\n            for (String memberName : memberNames) {\n                for (Character character : characterList) {\n                    if (character.getName().equals(memberName)) {\n                        teamMembers.add(character);\n                        break;\n                    }\n                }\n            }\n            teams.put(teamName, teamMembers); // adds team to teams hashmap\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/FileLoader.java b/src/core/FileLoader.java
--- a/src/core/FileLoader.java	
+++ b/src/core/FileLoader.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;
@@ -14,7 +14,6 @@
 import java.util.List;
 import java.util.Map;
 
-
 public class FileLoader {
 
     /**
@@ -77,4 +76,4 @@
             teams.put(teamName, teamMembers); // adds team to teams hashmap
         }
     }
-}
\ No newline at end of file
+}
Index: src/core/Swordsman.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nclass Swordsman extends Character {\n\n    /**\n     * Constructs a Swordsman object with the specified attributes.\n     *\n     * @param name    The unique name of the Swordsman character.\n     * @param hp      The initial hp of the Swordsman character.\n     * @param atk     The initial atk of the Swordsman character.\n     * @param def     The initial def of the Swordsman character.\n     */\n    public Swordsman(String name, int hp, int atk, int def) {\n\n        super(name, hp, atk, def, CharacterType.SWORDSMAN); // Call character constructor\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Swordsman.java b/src/core/Swordsman.java
--- a/src/core/Swordsman.java	
+++ b/src/core/Swordsman.java	
@@ -3,9 +3,10 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
+
 class Swordsman extends Character {
 
     /**
@@ -22,3 +23,4 @@
 
     }
 }
+
Index: src/core/Healer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nclass Healer extends Character {\n\n    /**\n     * Constructs a Healer object with the specified attributes.\n     *\n     * @param name    The unique name of the healer character.\n     * @param hp      The initial hp of the healer character.\n     * @param atk     The initial atk of the healer character.\n     * @param def     The initial def of the healer character.\n     */\n    public Healer(String name, int hp, int atk, int def) {\n        super(name, hp, atk, def, CharacterType.HEALER);  // Call character constructor\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Healer.java b/src/core/Healer.java
--- a/src/core/Healer.java	
+++ b/src/core/Healer.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 class Healer extends Character {
 
     /**
Index: src/core/Team.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Team {\n    private String name; // name of team\n    private List<Character> members; // members in team from list\n\n    /**\n     * Constructs a Team object\n     *\n     * @param name name of team\n     *\n     */\n    public Team(String name) {\n        this.name = name;\n        this.members = new ArrayList<>();\n    }\n\n    /**\n     * adds member to team\n     */\n    public void addMember(Character character) {\n        this.members.add(character); // adds character to memberlist\n    }\n\n    // getters\n\n    /**\n     * Retrieves the name of the team.\n     *\n     * @return the name of the team.\n     */\n    public String getName() {\n        return this.name; // gets name of team\n    }\n\n    /**\n     * Retrieves the members of the team.\n     *\n     * @return the members of the team.\n     */\n    public List<Character> getMembers() {\n        return this.members; // gets name of members in team\n    }\n\n    /**\n     * creates a team\n     *\n     * @param teamName the name of the team to be created\n     * @param teamMembers the list of members to be added\n     *\n     * return the Team object\n     */\n    public static Team createTeam(String teamName, List<Character> teamMembers) {\n        Team newTeam = new Team(teamName);\n        for (Character member : teamMembers) {\n            newTeam.addMember(member);\n        }\n        System.out.println(\"core.Team \" + teamName + \" has been created.\");\n        return newTeam;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Team.java b/src/core/Team.java
--- a/src/core/Team.java	
+++ b/src/core/Team.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 import java.util.ArrayList;
 import java.util.List;
 
@@ -68,3 +68,4 @@
         return newTeam;
     }
 }
+
Index: src/core/Marksman.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nclass Marksman extends Character {\n\n    /**\n     * Constructs a Marksman object with the specified attributes.\n     *\n     * @param name    The unique name of the Marksman character.\n     * @param hp      The initial hp of the Marksman character.\n     * @param atk     The initial atk of the Marksman character.\n     * @param def     The initial def of the Marksman character.\n     */\n    public Marksman(String name, int hp, int atk, int def) {\n\n        super(name, hp, atk, def, CharacterType.MARKSMAN); // Call character constructor\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Marksman.java b/src/core/Marksman.java
--- a/src/core/Marksman.java	
+++ b/src/core/Marksman.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 class Marksman extends Character {
 
     /**
Index: src/core/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\npublic class Game {\n    public Game() {\n    }\n\n    /**\n     * Method to run the menu\n     *\n     */\n    public static void main(String[] args) {\n        System.out.println(\"Your team has entered an undiscovered cave entrance and goes inside to take a safe and short rest in the night. All of you have been travelling on a long voyage to seek wealth and power. Unknowingly, they just stepped into the domain of a long gone ancient king called Mammon. Demon King Mammon was a demon that caused calamities wherever it went, by cursing crowds of people and royalty with excessive greed and causing them to go insane. The number of people affected were in the millions and caused families and communities to dissolve. Fortunately, a mysterious hero came from lands far away had happen to come face to face with the beast. His presence lifted the cursed of anyone around him and his weapon, a sword that seemingly bursted out with holy power, cut the beast until no parts of it were left. The hero soon disappeared using magical means that were too advanced for anyone to comprehend, and kingdoms and villages were left to recover for the next century. It has been more than 500 years since the great demon was put to rest, and all the power of the kingdoms and nations had grown even stronger. Old tales remind explorers of the vast riches the demon left behind in its resting grounds that it collected from battlefields it never joined, but won regardless. Whether these tales were myths or not, did not stop hundreds of thousands of adventurers from searching for the ancient beast’s riches all throughout the land.The team of three knew about this story in the back of their mind, but never considered trying to find the grounds as it   seemed impossible for the fact that no-one has discovered such a place for centuries.s\\nThey continued deeper into the cave, to eventually face a dead end and settle down. But before they had a chance, a black blob slowly creeped out from a small crevice at the ceiling of the bottom of the cave. The trio took their stances, ready to engage in a fight as the 8 feet tall and 8 feet wide black slime blocked their way out of the cave. Once fully formed, the trio could see jewels, gold coins and other treasures stuck deep in the black slime’s translucent body. Before the trio could consider the riches they may obtain, they moved slightly forward and engaged in a battle.\\n\\nBATTLE ENGAGE!\\n\");\n        Menu.menuLoop();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Game.java b/src/core/Game.java
--- a/src/core/Game.java	
+++ b/src/core/Game.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 public class Game {
     public Game() {
     }
@@ -19,3 +19,4 @@
         Menu.menuLoop();
     }
 }
+
Index: src/core/FileSaver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.Map;\n\npublic class FileSaver {\n\n    /**\n     * Method to save character data and team data to a CSV file\n     *\n     * @return true if save successful, false if not\n     */\n    public static boolean save(File file, List<Character> characterList, Map<String, List<Character>> teams) {\n        try (FileWriter fw = new FileWriter(file)) {\n            // Save characters\n            fw.write(\"Characters\\n\"); // Write a header to distinguish character data\n            for (Character character : characterList) {\n                // Write each character's details in CSV format: name,type,hp,atk,def\n                fw.write(String.format(\"%s,%s,%d,%d,%d\\n\",\n                        character.getName(),\n                        character.getType().toString(),\n                        character.getHp(),\n                        character.getAtk(),\n                        character.getDef()));\n            }\n\n            // Save teams\n            fw.write(\"\\nTeams\\n\"); // Write a header to distinguish team data\n            for (Map.Entry<String, List<Character>> entry : teams.entrySet()) {\n                // Iterate over each team entry in the teams map\n                fw.write(entry.getKey() + \",\"); // Write the team name followed by a comma\n                List<Character> teamMembers = entry.getValue(); // Get the list of team members\n                for (Character member : teamMembers) {\n                    fw.write(member.getName() + \";\");\n                }\n                fw.write(\"\\n\");\n            }\n\n            return true;\n        } catch (IOException ioe) {\n            return false;\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/FileSaver.java b/src/core/FileSaver.java
--- a/src/core/FileSaver.java	
+++ b/src/core/FileSaver.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 import java.io.File;
 import java.io.FileWriter;
 import java.io.IOException;
@@ -50,4 +50,4 @@
             return false;
         }
     }
-}
\ No newline at end of file
+}
Index: src/core/Battlefield.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\npackage core;\n\n\nimport java.util.*;\n\npublic class Battlefield{\n\n    public Battlefield() {\n\n    }\n\n    /**CalculateBossAtk calculates how much damage the boss deals based on a random integer between\n     * 11 and 0.\n     *\n     */\n    public Integer CalculateBossAtk(){\n        Random rand = new Random();\n        int highestDamageMultiplier = 11;\n        int randomMultiplier = rand.nextInt(highestDamageMultiplier);\n        return randomMultiplier * 1000;\n    }\n\n    /**AskTopThreeAtk goes through every party member to determine which are 3 highest dealing\n     * damage members. It goes through an arraylist filled with all the members of party, and gets\n     * each member's type and attack. The type and attack of each member are stored as pairs in the\n     * partyDamage hashmap. Then all the details in partyDamage are used to fill and alter an array\n     * called TopThreeMembers with the 3 members that deal the most amount of damage. Finally,\n     * TopThreeMembers is used to print the 3 members who have the highest attack power.\n     */\n    public void AskTopThreeAtk(ArrayList partyDetails) {\n        HashMap<String, Integer> partyDamage = new HashMap<String, Integer>();\n        for (int memberIndex = 0; memberIndex < partyDetails.size(); memberIndex++) {\n            Object member = partyDetails.get(memberIndex);\n            partyDamage.put(member.getType, member.getAtk());\n        }\n        String[] TopThreeMembers = new String[partyDetails.size()];\n        ArrayList allMembers = new ArrayList(partyDamage.keySet());\n        ArrayList allMemberDamage = new ArrayList(partyDamage.values());\n\n        for (int memberNum = 0; memberNum < allMembers.size(); memberNum++) {\n            String currentMember = String.valueOf(allMembers.get(memberNum));\n            int damage = (int) allMemberDamage.get(memberNum);\n            String memberDetails = currentMember + \":\" + damage;\n            //Index 2 of TopThreeMembers needs to have the member with the highest damage\n            String currentTopMemberDamage = TopThreeMembers[2];\n            String[] memberTopParts = currentTopMemberDamage.split(\":\");\n\n            String currentMiddleMemberDamage = TopThreeMembers[1];\n            String[] memberMiddleParts = currentMiddleMemberDamage.split(\":\");\n\n            String currentLowMemberDamage = TopThreeMembers[0];\n            String[] memberLowParts = currentLowMemberDamage.split(\":\");\n\n            if (TopThreeMembers[2] == null) {\n                TopThreeMembers[2] = memberDetails;\n\n            } else if (Integer.parseInt(memberTopParts[1]) > damage) {\n                if (TopThreeMembers[1] == null) {\n                    TopThreeMembers[1] = memberDetails;\n                } else if (Integer.parseInt(memberMiddleParts[1]) > damage) {\n                    if (TopThreeMembers[0] == null) {\n                        TopThreeMembers[0] = memberDetails;\n                    } else if (Integer.parseInt(memberMiddleParts[1]) < damage) {\n                        TopThreeMembers[0] = memberDetails;\n                    }\n                } else {\n                    String movedDetails = TopThreeMembers[1];\n                    TopThreeMembers[0] = movedDetails;\n                    TopThreeMembers[1] = memberDetails;\n                }\n            } else if (Integer.parseInt(memberTopParts[2]) < damage) {\n                String movedHighDetails = TopThreeMembers[2];\n                String movedMiddleDetails = TopThreeMembers[1];\n                TopThreeMembers[0] = movedMiddleDetails;\n                TopThreeMembers[1] = movedHighDetails;\n                TopThreeMembers[2] = memberDetails;\n            }\n            String Top3Details = \"The members who deal the most damage are:\\n\";\n            for (int memberSelection = 0; memberSelection < TopThreeMembers.length; memberSelection++) {\n                String[] selectedMemberDetails = TopThreeMembers[memberSelection].split(\":\");\n\n                Top3Details = Top3Details + selectedMemberDetails[1] + \"\\n\";\n            }\n            System.out.println(Top3Details);\n        }\n    }\n\n    /**HPAndDefLineup is a method use to print out the health and defense of each member. This is done\n     *using a for loop to loop through every member in partyDetails and get their type, hp and defense.\n     * The line that needs to be printed for each member is appended to gridDetails. In the end,\n     * gridDetails is printed.\n     */\n    public void HPAndDefLineup(ArrayList partyDetails) {\n        StringBuilder gridDetails = new StringBuilder();\n        for (int memberIndex = 0 ; memberIndex < partyDetails.size() ; memberIndex++){\n            Object member = partyDetails.get(memberIndex);\n            gridDetails.append(member.getType() + \" currently has \" + member.hp + \" health points and \" + member.getDef + \" defense.\\n\");\n        }System.out.println(gridDetails);\n    }\n\n    /**The CalculateDamage method calculates the damage dealt by a member, using their class and\n     * sometimes a multiplier.\n     */\n    public int CalculateDamage(Object partyMember) {\n        if (partyMember.getType() == \"HEALER\"){\n            int finalDamage = partyMember.getAtk();\n            return finalDamage;\n        }else if (partyMember.getType() == \"SWORDSMAN\"){\n            int finalDamage = partyMember.getAtk() * 1.5;\n            return finalDamage;\n        }else if (partyMember.getType() == \"MARKSMAN\"){\n            int finalDamage = partyMember.getAtk() * 1.15;\n            return finalDamage;\n        }else if (partyMember.getType() == \"SHIELDUSER\"){\n            int finalDamage = partyMember.getAtk();\n            return finalDamage;\n        }\n        return 0;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Battlefield.java b/src/core/Battlefield.java
--- a/src/core/Battlefield.java	
+++ b/src/core/Battlefield.java	
@@ -18,7 +18,7 @@
      * 11 and 0.
      *
      */
-    public Integer CalculateBossAtk(){
+    public static Integer CalculateBossAtk(){
         Random rand = new Random();
         int highestDamageMultiplier = 11;
         int randomMultiplier = rand.nextInt(highestDamageMultiplier);
@@ -32,11 +32,11 @@
      * called TopThreeMembers with the 3 members that deal the most amount of damage. Finally,
      * TopThreeMembers is used to print the 3 members who have the highest attack power.
      */
-    public void AskTopThreeAtk(ArrayList partyDetails) {
+    public static void AskTopThreeAtk(ArrayList partyDetails) {
         HashMap<String, Integer> partyDamage = new HashMap<String, Integer>();
         for (int memberIndex = 0; memberIndex < partyDetails.size(); memberIndex++) {
             Object member = partyDetails.get(memberIndex);
-            partyDamage.put(member.getType, member.getAtk());
+            partyDamage.put(member.getType(), member.getAtk());
         }
         String[] TopThreeMembers = new String[partyDetails.size()];
         ArrayList allMembers = new ArrayList(partyDamage.keySet());
@@ -95,18 +95,18 @@
      * The line that needs to be printed for each member is appended to gridDetails. In the end,
      * gridDetails is printed.
      */
-    public void HPAndDefLineup(ArrayList partyDetails) {
+    public static void HPAndDefLineup(ArrayList partyDetails) {
         StringBuilder gridDetails = new StringBuilder();
         for (int memberIndex = 0 ; memberIndex < partyDetails.size() ; memberIndex++){
             Object member = partyDetails.get(memberIndex);
-            gridDetails.append(member.getType() + " currently has " + member.hp + " health points and " + member.getDef + " defense.\n");
+            gridDetails.append(member.getType() + " currently has " + member.getHp + " health points and " + member.getDef + " defense.\n");
         }System.out.println(gridDetails);
     }
 
     /**The CalculateDamage method calculates the damage dealt by a member, using their class and
      * sometimes a multiplier.
      */
-    public int CalculateDamage(Object partyMember) {
+    public static int CalculateDamage(Object partyMember) {
         if (partyMember.getType() == "HEALER"){
             int finalDamage = partyMember.getAtk();
             return finalDamage;
Index: src/Main.java
===================================================================
diff --git a/src/Main.java b/src/Main.java
deleted file mode 100644
--- a/src/Main.java	
+++ /dev/null	
@@ -1,15 +0,0 @@
-    /**
-     * Data tracking for group projects in CPSC 233.
-     * Procedural version of program with system.in/out I/O with unit testing and using git for version control.
-     *@authors: Syed Omar, Nethanya Dhaiphule and Arfa Raja
-     *@emails: syed.omar@ucalgary.ca, nethanya.dhaiphule@ucalgary.ca and arfa.raja@ucalgary.ca
-     *@version 21.0.1
-     */
-
-    public class Main {
-        public static void main(String[] args){
-            Menu.menuLoop();
-            System.out.println("Thank you for playing!");
-        }
-    }
-
Index: src/ShieldUser.java
===================================================================
diff --git a/src/ShieldUser.java b/src/ShieldUser.java
deleted file mode 100644
--- a/src/ShieldUser.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-class ShieldUser extends Character {
-
-    public ShieldUser(String name, int hp, int atk, int def) {
-
-        super(name, hp, atk, def, CharacterType.SHIELDUSER);
-
-    }
-}
Index: src/Swordsman.java
===================================================================
diff --git a/src/Swordsman.java b/src/Swordsman.java
deleted file mode 100644
--- a/src/Swordsman.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-class Swordsman extends Character {
-
-    public Swordsman(String name, int hp, int atk, int def) {
-
-        super(name, hp, atk, def, CharacterType.SWORDSMAN);
-
-    }
-}
\ No newline at end of file
Index: src/Healer.java
===================================================================
diff --git a/src/Healer.java b/src/Healer.java
deleted file mode 100644
--- a/src/Healer.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-class Healer extends Character {
-
-    public Healer(String name, int hp, int atk, int def) {
-
-        super(name, hp, atk, def, CharacterType.HEALER);
-
-    }
-}
\ No newline at end of file
Index: src/Marksman.java
===================================================================
diff --git a/src/Marksman.java b/src/Marksman.java
deleted file mode 100644
--- a/src/Marksman.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-class Marksman extends Character {
-
-    public Marksman(String name, int hp, int atk, int def) {
-
-        super(name, hp, atk, def, CharacterType.MARKSMAN);
-
-    }
-}
\ No newline at end of file
Index: src/CharacterType.java
===================================================================
diff --git a/src/CharacterType.java b/src/CharacterType.java
deleted file mode 100644
--- a/src/CharacterType.java	
+++ /dev/null	
@@ -1,7 +0,0 @@
-public enum CharacterType {
-    HEALER,
-    MARKSMAN,
-    SWORDSMAN,
-    SHIELDUSER
-}
-
Index: src/Character.java
===================================================================
diff --git a/src/Character.java b/src/Character.java
deleted file mode 100644
--- a/src/Character.java	
+++ /dev/null	
@@ -1,62 +0,0 @@
-public abstract class Character {
-
-    protected String name;
-    protected int hp;
-    protected int atk;
-    protected int def;
-    protected CharacterType type;
-
-    /**
-     * Constructs a Character object with the specified attributes.
-     *
-     * @param name name
-     * @param hp   health
-     * @param atk  attack
-     * @param def  defense
-     * @param type class
-     */
-    public Character(String name, int hp, int atk, int def, CharacterType type) {
-        this.name = name;
-        this.hp = hp;
-        this.atk = atk;
-        this.def = def;
-        this.type = type;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public int getHp() {
-        return hp;
-    }
-
-    public int getAtk() {
-        return atk;
-    }
-
-    public int getDef() {
-        return def;
-    }
-
-    public CharacterType getType() {
-        return type;
-    }
-
-    public void setHp(int newHp) {
-        this.hp = newHp;
-    }
-
-    public void setAtk(int newAtk) {
-        this.atk = newAtk;
-    }
-
-    public void setDef(int newDef) {
-        this.def = newDef;
-    }
-
-    public void setType(CharacterType newType) {
-        this.type = newType;
-    }
-}
-
Index: src/Team.java
===================================================================
diff --git a/src/Team.java b/src/Team.java
deleted file mode 100644
--- a/src/Team.java	
+++ /dev/null	
@@ -1,33 +0,0 @@
-import java.util.ArrayList;
-import java.util.List;
-
-public class Team {
-    private String name;
-    private List<Character> members;
-
-    public Team(String name) {
-        this.name = name;
-        this.members = new ArrayList<>();
-    }
-
-    public void addMember(Character character) {
-        this.members.add(character);
-    }
-
-    public String getName() {
-        return this.name;
-    }
-
-    public List<Character> getMembers() {
-        return this.members;
-    }
-
-    public static Team createTeam(String teamName, List<Character> teamMembers) {
-        Team newTeam = new Team(teamName);
-        for (Character member : teamMembers) {
-            newTeam.addMember(member);
-        }
-        System.out.println("Team " + teamName + " has been created.");
-        return newTeam;
-    }
-}
Index: GroupProject.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"module-library\">\n      <library name=\"JUnit4\">\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"module-library\">\n      <library name=\"JUnit4\">\n        <CLASSES>\n          <root url=\"jar://$MODULE_DIR$/lib/junit-4.13.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/hamcrest-core-1.3.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"module-library\">\n      <library name=\"JUnit5.8.1\">\n        <CLASSES>\n          <root url=\"jar://$MODULE_DIR$/lib/junit-jupiter-5.8.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/junit-jupiter-api-5.8.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/opentest4j-1.2.0.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/junit-platform-commons-1.8.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/apiguardian-api-1.1.2.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/junit-jupiter-params-5.8.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/junit-jupiter-engine-5.8.1.jar!/\" />\n          <root url=\"jar://$MODULE_DIR$/lib/junit-platform-engine-1.8.1.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GroupProject.iml b/GroupProject.iml
--- a/GroupProject.iml	
+++ b/GroupProject.iml	
@@ -43,5 +43,21 @@
         <SOURCES />
       </library>
     </orderEntry>
+    <orderEntry type="module-library">
+      <library name="JUnit5.8.1">
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/junit-jupiter-5.8.1.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/junit-jupiter-api-5.8.1.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/junit-platform-commons-1.8.1.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/apiguardian-api-1.1.2.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/junit-jupiter-params-5.8.1.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/junit-jupiter-engine-5.8.1.jar!/" />
+          <root url="jar://$MODULE_DIR$/lib/junit-platform-engine-1.8.1.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a4f87bc1-a171-4809-b3e9-e4f979fb00ae\" name=\"Changes\" comment=\"update Menu\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/GroupProject.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GroupProject.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/core/Battlefield.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/core/Battlefield.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/core/FileLoader.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/core/FileLoader.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/core/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/core/Menu.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"Demo2\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPENED&quot;,\n    &quot;assignee&quot;: {\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\n      &quot;username&quot;: &quot;nethanya.dhaiphule&quot;,\n      &quot;fullname&quot;: &quot;Nethanya Dhaiphule&quot;\n    }\n  }\n}</component>\n  <component name=\"GitLabMergeRequestsSettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;first&quot;: &quot;https://csgit.ucalgary.ca/syed.omar/groupproject.git&quot;,\n    &quot;second&quot;: &quot;7f59f09e-fb54-4e2a-98f6-5935971f61a7&quot;\n  }\n}</component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2cjLD38L3ByBJot2rZJlUrmoMnO\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Application.Game.executor\": \"Run\",\n    \"Application.Main.executor\": \"Run\",\n    \"Downloaded.Files.Path.Enabled\": \"true\",\n    \"JUnit.Tests.testCharacterCreation.executor\": \"Run\",\n    \"JUnit.Tests.testCheckCharacter.executor\": \"Run\",\n    \"JUnit.Tests.testTeamCreation.executor\": \"Run\",\n    \"Repository.Attach.Annotations\": \"false\",\n    \"Repository.Attach.JavaDocs\": \"false\",\n    \"Repository.Attach.Sources\": \"false\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"git-widget-placeholder\": \"Demo2\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"JUnit.Tests.testTeamCreation\">\n    <configuration name=\"Game\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"core.Game\" />\n      <module name=\"GroupProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"core.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Tests.testCharacterCreation\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"GroupProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"core.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"core\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"core.Tests\" />\n      <option name=\"METHOD_NAME\" value=\"testCharacterCreation\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Tests.testCheckCharacter\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"GroupProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"core.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"core\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"core.Tests\" />\n      <option name=\"METHOD_NAME\" value=\"testCheckCharacter\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Tests.testTeamCreation\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"GroupProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"core.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"core\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"core.Tests\" />\n      <option name=\"METHOD_NAME\" value=\"testTeamCreation\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.Tests.testTeamCreation\" />\n        <item itemvalue=\"JUnit.Tests.testCharacterCreation\" />\n        <item itemvalue=\"JUnit.Tests.testCheckCharacter\" />\n        <item itemvalue=\"Application.Game\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-4caba194b151-23eed401\" />\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"a4f87bc1-a171-4809-b3e9-e4f979fb00ae\" name=\"Changes\" comment=\"\" />\n      <created>1708619919070</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1708619919070</updated>\n      <workItem from=\"1710645983174\" duration=\"2662000\" />\n      <workItem from=\"1710711266599\" duration=\"8622000\" />\n      <workItem from=\"1710782175447\" duration=\"1380000\" />\n      <workItem from=\"1710827778344\" duration=\"696000\" />\n      <workItem from=\"1710907659554\" duration=\"248000\" />\n      <workItem from=\"1710907919318\" duration=\"1289000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1708620129432</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1708620129432</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added attributes and methods\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710652464255</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710652464255</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Updated Menu\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710728916252</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710728916252</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Updated Menu\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710729037724</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710729037724</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Fixed error\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710743093656</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710743093656</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"finished CheckCharacter()\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710744411062</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710744411062</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"finished CheckCharacter()\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710783160119</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710783160119</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"finished CheckCharacter()\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710783191885</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710783191885</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"finished CheckCharacter()\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710783277354</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710783277354</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Initial commit\" />\n    <MESSAGE value=\"Added attributes and methods\" />\n    <MESSAGE value=\"Updated Menu\" />\n    <MESSAGE value=\"Fixed error\" />\n    <MESSAGE value=\"finished CheckCharacter()\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"finished CheckCharacter()\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,12 +4,31 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a4f87bc1-a171-4809-b3e9-e4f979fb00ae" name="Changes" comment="update Menu">
+    <list default="true" id="a4f87bc1-a171-4809-b3e9-e4f979fb00ae" name="Changes" comment="More work done on Battlefield.java">
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GroupProject.iml" beforeDir="false" afterPath="$PROJECT_DIR$/GroupProject.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Character.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/CharacterType.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Healer.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Marksman.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ShieldUser.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Swordsman.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Team.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/core/Battlefield.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Battlefield.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Character.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Character.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/CharacterType.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/CharacterType.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/core/FileLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/FileLoader.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/core/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/FileSaver.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/FileSaver.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Healer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Healer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Marksman.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Marksman.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/ShieldUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/ShieldUser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Swordsman.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Swordsman.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Team.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Team.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/core/Tests.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/core/Tests.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -63,22 +82,32 @@
     "Downloaded.Files.Path.Enabled": "true",
     "JUnit.Tests.testCharacterCreation.executor": "Run",
     "JUnit.Tests.testCheckCharacter.executor": "Run",
-    "JUnit.Tests.testTeamCreation.executor": "Run",
+    "JUnit.Tests.testTeamCreation.executor": "Debug",
     "Repository.Attach.Annotations": "false",
     "Repository.Attach.JavaDocs": "false",
     "Repository.Attach.Sources": "false",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "git-widget-placeholder": "Demo2",
     "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/Users/syedzayed/Desktop/DemoGroupProject/groupproject/src",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/src" />
+    </key>
+  </component>
   <component name="RunManager" selected="JUnit.Tests.testTeamCreation">
     <configuration name="Game" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="core.Game" />
@@ -245,7 +274,23 @@
       <option name="project" value="LOCAL" />
       <updated>1710783277354</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="Battlefield.java should be basically finished">
+      <option name="closed" value="true" />
+      <created>1710934327688</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1710934327688</updated>
+    </task>
+    <task id="LOCAL-00011" summary="More work done on Battlefield.java">
+      <option name="closed" value="true" />
+      <created>1710954020480</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1710954020480</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -268,6 +313,85 @@
     <MESSAGE value="Updated Menu" />
     <MESSAGE value="Fixed error" />
     <MESSAGE value="finished CheckCharacter()" />
-    <option name="LAST_COMMIT_MESSAGE" value="finished CheckCharacter()" />
+    <MESSAGE value="Battlefield.java is mostly finished" />
+    <MESSAGE value="Battlefield.java should be basically finished" />
+    <MESSAGE value="More work done on Battlefield.java" />
+    <option name="LAST_COMMIT_MESSAGE" value="More work done on Battlefield.java" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Menu.java</url>
+          <line>10</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Team.java</url>
+          <line>11</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Swordsman.java</url>
+          <line>9</line>
+          <option name="timeStamp" value="3" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/ShieldUser.java</url>
+          <line>10</line>
+          <option name="timeStamp" value="4" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Marksman.java</url>
+          <line>8</line>
+          <option name="timeStamp" value="5" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Healer.java</url>
+          <line>8</line>
+          <option name="timeStamp" value="6" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Game.java</url>
+          <line>8</line>
+          <option name="timeStamp" value="7" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/FileSaver.java</url>
+          <line>23</line>
+          <option name="timeStamp" value="8" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/FileLoader.java</url>
+          <line>23</line>
+          <option name="timeStamp" value="9" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/CharacterType.java</url>
+          <line>8</line>
+          <option name="timeStamp" value="10" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Battlefield.java</url>
+          <line>21</line>
+          <option name="timeStamp" value="11" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Battlefield.java</url>
+          <line>35</line>
+          <option name="timeStamp" value="12" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Battlefield.java</url>
+          <line>98</line>
+          <option name="timeStamp" value="13" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/core/Battlefield.java</url>
+          <line>109</line>
+          <option name="timeStamp" value="14" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/uiDesigner.xml	
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/core/Character.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\n\nimport java.util.List;\n\npublic abstract class Character implements Comparable<Character> {\n\n    // attributes\n\n    protected String name; // name of character\n    protected int hp; // health of character\n    protected int atk; // attack of character\n    protected int def; // defense of character\n    protected CharacterType type; // class of character\n\n    /**\n     * Constructs a Character object with the specified attributes.\n     *\n     * @param name name\n     * @param hp   health\n     * @param atk  attack\n     * @param def  defense\n     * @param type class\n     */\n    public Character(String name, int hp, int atk, int def, CharacterType type) {\n\n        this.name = name;\n        this.hp = hp;\n        this.atk = atk;\n        this.def = def;\n        this.type = type;\n    }\n\n    // Getters and setters\n\n    /**\n     * Retrieves the unique name of the character.\n     *\n     * @return the name of the character\n     */\n    public String getName() {\n        return name; // current name\n    }\n\n    /**\n     * Retrieves the hp of the character.\n     *\n     * @return the hp of the character\n     */\n    public int getHp() {\n        return hp; // current hp\n    }\n\n    /**\n     * Retrieves the atk of the character.\n     *\n     * @return the atk of the character\n     */\n    public int getAtk() {\n        return atk; // current atk\n    }\n\n    /**\n     * Retrieves the def of the character.\n     *\n     * @return the def of the character\n     */\n    public int getDef() {\n        return def; // current def\n    }\n\n    /**\n     * Retrieves the class of the character.\n     *\n     * @return the class of the character\n     */\n    public CharacterType getType() {\n        return type; // current type\n    }\n\n    /**\n     * Sets the hp of the character to the specified value.\n     *\n     * @param newHp the new hp\n     *\n     */\n    public void setHp(int newHp) {\n        this.hp = newHp; // updated hp\n    }\n\n    /**\n     * Sets the atj of the character to the specified value.\n     *\n     * @param newAtk the new hp\n     *\n     */\n    public void setAtk(int newAtk) {\n        this.atk = newAtk; // updated atk\n    }\n\n    /**\n     * Sets the def of the character to the specified value.\n     *\n     * @param newDef the new hp\n     *\n     */\n    public void setDef(int newDef) {\n        this.def = newDef; // updated def\n    }\n\n    /**\n     * Sets the class of the character to the specified value.\n     *\n     * @param newType the new hp\n     *\n     */\n    public void setType(CharacterType newType) {\n        this.type = newType; // updated type\n    }\n\n    /**\n     * Formats the return of toString when viewing About Members\n     *\n     * @return the formatted String\n     *\n     */\n    @Override\n    public String toString() {\n        // formatted string\n        return \"Name: \" + this.name + \", HP: \" + this.hp + \", ATK: \" + this.atk + \", DEF: \" + this.def + \", TYPE: \" + this.type;\n    }\n\n    /**\n     * checks if a character exists\n     *\n     * @return true if character exits, false otherwise\n     *\n     */\n    public static boolean CheckCharacter(int option, List<Character> characterList) {\n        boolean exists = false;\n        switch (option) {\n            case 1:\n                // check if there is a Healer in team\n                for (Character character : characterList) {\n                    if (character.getType() == CharacterType.HEALER) {\n                        exists = true;\n                        break;\n                    }\n                }\n            case 2:\n                // check if there is a Marksman in team\n                for (Character character : characterList) {\n                    if (character.getType() == CharacterType.MARKSMAN) {\n                        exists = true;\n                        break;\n                    }\n                }\n\n            case 3:\n                // check if there is a Swordsman in team\n                for (Character character : characterList) {\n                    if (character.getType() == CharacterType.SWORDSMAN) {\n                        exists = true;\n                        break;\n                    }\n                }\n\n            case 4:\n                // check if there is a ShieldUser in team\n                for (Character character : characterList) {\n                    if (character.getType() == CharacterType.SHIELDUSER) {\n                        exists = true;\n                        break;\n                    }\n                }\n\n            default:\n                System.out.println(\"Invalid option.\"); // if\n                break;\n        }\n        return exists;\n    }\n\n    /**\n     * Sorts the characters alphabetically when viewing About Members\n     *\n     * @return the formatted list\n     *\n     */\n    @Override\n    public int compareTo(Character other) {\n        return this.name.compareTo(other.name);  // sort by name\n    }\n\n    /**\n     * Creates the characters from the file\n     *\n     * @return the new Character object\n     */\n    static Character createFileCharacter(String name, int hp, int atk, int def, CharacterType type) {\n        switch (type) {\n            case HEALER:\n                return new Healer(name, hp, atk, def);\n            case MARKSMAN:\n                return new Marksman(name, hp, atk, def);\n            case SWORDSMAN:\n                return new Swordsman(name, hp, atk, def);\n            case SHIELDUSER:\n                return new ShieldUser(name, hp, atk, def);\n            default:\n                throw new IllegalArgumentException(\"Invalid character type: \" + type);\n        }\n    }\n\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Character.java b/src/core/Character.java
--- a/src/core/Character.java	
+++ b/src/core/Character.java	
@@ -3,9 +3,9 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
 
+
 import java.util.List;
 
 public abstract class Character implements Comparable<Character> {
Index: src/core/Tests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\n *  Arfa Raja, Nethanya Dhaipule, Syed Omar\n *  March 20, 2024\n *  T12\n */\n\npackage core;\nimport org.junit.Test;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.*;\n\n    public class Tests {\n\n        // Test for checking character type existence\n        @Test\n        public void testCheckCharacter() {\n            // Given: Populate a list with different types of characters\n            List<Character> characterList = new ArrayList<>();\n            characterList.add(new Healer(\"Healer1\", 100, 50, 30));\n            characterList.add(new Marksman(\"Marksman1\", 120, 60, 40));\n            characterList.add(new Swordsman(\"Swordsman1\", 150, 70, 50));\n            characterList.add(new ShieldUser(\"ShieldUser1\", 200, 80, 60));\n\n            // When: Check if characters of each type exist\n            boolean healerExists = Character.CheckCharacter(1, characterList);\n            boolean marksmanExists = Character.CheckCharacter(2, characterList);\n            boolean swordsmanExists = Character.CheckCharacter(3, characterList);\n            boolean shieldUserExists = Character.CheckCharacter(4, characterList);\n\n            // Then: Ensure that each type of character exists\n            assertTrue(healerExists);\n            assertTrue(marksmanExists);\n            assertTrue(swordsmanExists);\n            assertTrue(shieldUserExists);\n        }\n\n        // Test for character creation\n        @Test\n        public void testCharacterCreation() {\n            // Given: An empty list of characters\n\n            // When: Create a new character and add it to the list\n            List<Character> characterList = new ArrayList<>();\n            Character newCharacter = new Healer(\"NewHealer\", 100, 50, 30);\n            characterList.add(newCharacter);\n\n            // Then: Ensure that the character is created correctly\n            assertEquals(1, characterList.size());\n            assertEquals(\"NewHealer\", characterList.get(0).getName());\n            assertEquals(100, characterList.get(0).getHp());\n            assertEquals(50, characterList.get(0).getAtk());\n            assertEquals(30, characterList.get(0).getDef());\n        }\n\n        // Test for team creation\n        @Test\n        public void testTeamCreation() {\n            // Given: A list with two different types of characters\n            List<Character> characterList = new ArrayList<>();\n            Character healer = new Healer(\"Healer1\", 100, 50, 30);\n            Character marksman = new Marksman(\"Marksman1\", 120, 60, 40);\n            characterList.add(healer);\n            characterList.add(marksman);\n\n            // When: Create a team using the characters\n            String teamName = \"Team1\";\n            List<Character> teamMembers = new ArrayList<>();\n            teamMembers.add(healer);\n            teamMembers.add(marksman);\n            Team team = Team.createTeam(teamName, teamMembers);\n\n            // Then: Ensure that the team is created correctly\n            assertEquals(teamName, team.getName());\n            assertEquals(2, team.getMembers().size());\n            assertTrue(team.getMembers().contains(healer));\n            assertTrue(team.getMembers().contains(marksman));\n        }\n    }\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/core/Tests.java b/src/core/Tests.java
--- a/src/core/Tests.java	
+++ b/src/core/Tests.java	
@@ -3,79 +3,103 @@
  *  March 20, 2024
  *  T12
  */
-
 package core;
-import org.junit.Test;
+
+
+import org.junit.jupiter.api.Test;
 
 import java.util.ArrayList;
 import java.util.List;
 import static org.junit.jupiter.api.Assertions.*;
 
-    public class Tests {
+public class Tests {
 
-        // Test for checking character type existence
-        @Test
-        public void testCheckCharacter() {
-            // Given: Populate a list with different types of characters
-            List<Character> characterList = new ArrayList<>();
-            characterList.add(new Healer("Healer1", 100, 50, 30));
-            characterList.add(new Marksman("Marksman1", 120, 60, 40));
-            characterList.add(new Swordsman("Swordsman1", 150, 70, 50));
-            characterList.add(new ShieldUser("ShieldUser1", 200, 80, 60));
+    // Test for checking character type existence
+    @Test
+    public void testCheckCharacter() {
+        // Given: Populate a list with different types of characters
+        List<Character> characterList = new ArrayList<>();
+        characterList.add(new Healer("Healer1", 100, 50, 30));
+        characterList.add(new Marksman("Marksman1", 120, 60, 40));
+        characterList.add(new Swordsman("Swordsman1", 150, 70, 50));
+        characterList.add(new ShieldUser("ShieldUser1", 200, 80, 60));
 
-            // When: Check if characters of each type exist
-            boolean healerExists = Character.CheckCharacter(1, characterList);
-            boolean marksmanExists = Character.CheckCharacter(2, characterList);
-            boolean swordsmanExists = Character.CheckCharacter(3, characterList);
-            boolean shieldUserExists = Character.CheckCharacter(4, characterList);
+        // When: Check if characters of each type exist
+        boolean healerExists = Character.CheckCharacter(1, characterList);
+        boolean marksmanExists = Character.CheckCharacter(2, characterList);
+        boolean swordsmanExists = Character.CheckCharacter(3, characterList);
+        boolean shieldUserExists = Character.CheckCharacter(4, characterList);
 
-            // Then: Ensure that each type of character exists
-            assertTrue(healerExists);
-            assertTrue(marksmanExists);
-            assertTrue(swordsmanExists);
-            assertTrue(shieldUserExists);
-        }
+        // Then: Ensure that each type of character exists
+        assertTrue(healerExists);
+        assertTrue(marksmanExists);
+        assertTrue(swordsmanExists);
+        assertTrue(shieldUserExists);
+    }
 
-        // Test for character creation
-        @Test
-        public void testCharacterCreation() {
-            // Given: An empty list of characters
+    // Test for character creation
+    @Test
+    public void testCharacterCreation() {
+        // Given: An empty list of characters
 
-            // When: Create a new character and add it to the list
-            List<Character> characterList = new ArrayList<>();
-            Character newCharacter = new Healer("NewHealer", 100, 50, 30);
-            characterList.add(newCharacter);
+        // When: Create a new character and add it to the list
+        List<Character> characterList = new ArrayList<>();
+        Character newCharacter = new Healer("NewHealer", 100, 50, 30);
+        characterList.add(newCharacter);
 
-            // Then: Ensure that the character is created correctly
-            assertEquals(1, characterList.size());
-            assertEquals("NewHealer", characterList.get(0).getName());
-            assertEquals(100, characterList.get(0).getHp());
-            assertEquals(50, characterList.get(0).getAtk());
-            assertEquals(30, characterList.get(0).getDef());
-        }
+        // Then: Ensure that the character is created correctly
+        assertEquals(1, characterList.size());
+        assertEquals("NewHealer", characterList.get(0).getName());
+        assertEquals(100, characterList.get(0).getHp());
+        assertEquals(50, characterList.get(0).getAtk());
+        assertEquals(30, characterList.get(0).getDef());
+    }
 
-        // Test for team creation
-        @Test
-        public void testTeamCreation() {
-            // Given: A list with two different types of characters
-            List<Character> characterList = new ArrayList<>();
-            Character healer = new Healer("Healer1", 100, 50, 30);
-            Character marksman = new Marksman("Marksman1", 120, 60, 40);
-            characterList.add(healer);
-            characterList.add(marksman);
+    // Test for team creation
+    @Test
+    public void testTeamCreation() {
+        // Given: A list with two different types of characters
+        List<Character> characterList = new ArrayList<>();
+        Character healer = new Healer("Healer1", 100, 50, 30);
+        Character marksman = new Marksman("Marksman1", 120, 60, 40);
+        characterList.add(healer);
+        characterList.add(marksman);
 
-            // When: Create a team using the characters
-            String teamName = "Team1";
-            List<Character> teamMembers = new ArrayList<>();
-            teamMembers.add(healer);
-            teamMembers.add(marksman);
-            Team team = Team.createTeam(teamName, teamMembers);
+        // When: Create a team using the characters
+        String teamName = "Team1";
+        List<Character> teamMembers = new ArrayList<>();
+        teamMembers.add(healer);
+        teamMembers.add(marksman);
+        Team team = Team.createTeam(teamName, teamMembers);
 
-            // Then: Ensure that the team is created correctly
-            assertEquals(teamName, team.getName());
-            assertEquals(2, team.getMembers().size());
-            assertTrue(team.getMembers().contains(healer));
-            assertTrue(team.getMembers().contains(marksman));
-        }
+        // Then: Ensure that the team is created correctly
+        assertEquals(teamName, team.getName());
+        assertEquals(2, team.getMembers().size());
+        assertTrue(team.getMembers().contains(healer));
+        assertTrue(team.getMembers().contains(marksman));
+    }
+
+    @Test
+    public void CalculateBossAtk() {
+        Object damage = CalculateBossAtk();
+    
     }
+
+    @Test
+    public void AskTopThreeAtk() {
+
+    }
+
+    @Test
+    public void HPAndDefLineup() {
+
+    }
+
+    @Test
+    public void CalculateDamage() {
+
+    }
+    
+    
+}
 
